namespace MalwareScan.AMSI.Tests
{
    using System;
    using System.IO;
    using System.Text;

    using MalwareScan.AMSI;

    using Xunit;

    // These tests require you to turn off the virus scanner for this directory

    public class TestFileFixture : IDisposable
    {
        public const string InnocentFileName = "innocent.com";
        public const string EICARFileName = "EICAR.com";
        public const string TestFileDirectory = "testfiles";

        public TestFileFixture()
        {
            
            if (!Directory.Exists(TestFileDirectory))    
            {
                Directory.CreateDirectory(TestFileDirectory);
            }

            CreateFile("Nothing to see here", InnocentFileName);
            CreateFile(@"X5O!P%@AP[4\PZX54(P^)7CC)7}" + @"$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*", EICARFileName);

        }
        public void Dispose()
        {
            try
            {
                // TODO: Delete the files
            }
            catch
            {
                // Sometimes we just can't delete the files because Windows is still locking them
            }
        }

        private void CreateFile(string content, string name)
        {
            var fileName = Path.Combine(TestFileDirectory, name);
            if (!File.Exists(fileName))
            {
                using (var fs = File.Create(fileName))
                using (var writer = new StreamWriter(fs, Encoding.UTF8, 1024, false))
                {
                    writer.Write(content);
                    writer.Flush();
                    writer.Close();
                }
            }
        }
    }


    public class FileBasedTest : IClassFixture<TestFileFixture>
    {
        private const string AppName = "VirusScan.AMSI TEST library";

        [Fact]
        public void CanDetectEICARInStream()
        {
            using (var fileStream = File.Open(Path.Combine(TestFileFixture.TestFileDirectory, TestFileFixture.EICARFileName), FileMode.Open, FileAccess.Read, FileShare.Read))
            {
                var subject = new MalwareScanner(AppName);
                var result = subject.HasVirus(fileStream, TestFileFixture.EICARFileName);
                Assert.True(result);
            }
        }

        [Fact]
        public void CanDetectEICARInFileStreamWithPositionSet()
        {
            using (var fileStream = File.Open(Path.Combine(TestFileFixture.TestFileDirectory, TestFileFixture.EICARFileName), FileMode.Open, FileAccess.Read, FileShare.Read))
            {
                fileStream.Position = 10;
                var subject = new MalwareScanner(AppName);
                var result = subject.HasVirus(fileStream, TestFileFixture.EICARFileName);
                Assert.True(result);
                Assert.Equal(10, fileStream.Position);
            }
        }

        [Fact]
        public void DoesNotDetectInnocousStream()
        {
            using (var fileStream = File.Open(Path.Combine(TestFileFixture.TestFileDirectory, TestFileFixture.InnocentFileName), FileMode.Open, FileAccess.Read, FileShare.Read))
            {
                var subject = new MalwareScanner(AppName);
                var result = subject.HasVirus(fileStream, TestFileFixture.InnocentFileName);
                Assert.False(result);
            }
        }
    }
}
